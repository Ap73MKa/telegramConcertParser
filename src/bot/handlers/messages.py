from abc import ABC
from collections.abc import Sequence
from random import choices

from src.config import configure
from src.database.models import City, Concert


class Messages(ABC):
    @staticmethod
    def get_site_info() -> str:
        return (
            f"<b><a href='https://{configure.bot.kassir_link}'>Kassir</a></b> - —Å–∞–π—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –º—ã –∏ —É–∑–Ω–∞–µ–º "
            "–≤—Å–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é o6 –∫–æ–Ω—Ü–µ—Ä—Ç–∞—Ö. –ï—Å–ª–∏ –≤–∞–º –Ω–µ—É–¥–æ–±–µ–Ω –Ω–∞—à –±–æ—Ç, —Ç–æ –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –Ω–æ–≤—É—é "
            "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ —Å–∞–π—Ç–µ ü§î"
        )

    @staticmethod
    def get_bot_info(cities: Sequence[City]) -> str:
        base = (
            "<b>tgConcerts</b> - —ç—Ç–æ –æ—Å–æ–±—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–±–∏—Ä–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"
            " o –≤—Å–µ—Ö –∫–æ–Ω—Ü–µ—Ä—Ç–∞—Ö –≥–æ—Ä–æ–¥–æ–≤ –†–æ—Å—Å–∏–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è! –ß—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å"
            " –±–æ—Ç–∞ –Ω–∞–ø–∏—à–∏ <b>/start</b>\n\nHa –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω—ã"
        )
        if not cities:
            return base
        count = len(cities)
        cities_list = [city.name for city in choices(cities, k=6)]
        cities_formatted = "\n".join([f"‚Ä¢ {city}" for city in cities_list])
        return base + f" –≥–æ—Ä–æ–¥–∞:\n{cities_formatted}\n –ò –µ—â–µ –±–æ–ª–µ–µ {count - 6} –≥–æ—Ä–æ–¥–æ–≤!"

    @staticmethod
    def get_before_list() -> str:
        return "–í–≤–µ–¥–∏—Ç–µ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞</b> –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞:"

    @staticmethod
    def get_concert_list(concerts: Sequence[Concert], city: City) -> str:
        concert_list = concerts[len(concerts) - 20 :]
        max_city_letter_count = 40
        for concert in concert_list:
            concert.name = (
                f"{concert.name[:37]}..."
                if len(concert.name) > max_city_letter_count
                else concert.name
            )
        concert_list = [
            f"{concert.concert_date.strftime('%a, %d %b. %Y')}<i> –æ—Ç {concert.price} ‚ÇΩ</i>\n"
            f"<b><a href='{concert.link}'>{concert.name}</a></b>\n"
            for concert in concert_list
        ]
        concert_list = "\n".join(concert_list)
        city_name = str(city.name).upper()
        return (
            f'<a href="https://{city.abb}.{configure.bot.kassir_link}">{city_name}</a>. '
            f"–°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤\n\n\n{concert_list}"
        )

    @staticmethod
    def get_welcome(user_name: str = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å") -> str:
        return f"–ü—Ä–∏–≤–µ—Ç, {user_name}!\n–îa–≤a–π —É–∑–Ω–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–Ω—Ü–µ—Ä—Ç—ã"

    @staticmethod
    def get_error_concert() -> str:
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞"

    @staticmethod
    def get_error_city() -> str:
        return "–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞, –≤–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"

    @staticmethod
    def get_update_time(time: float) -> str:
        return f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞.\nB—ã–øo–ª–Ωe–Ωo –∑–∞: {time:.1f} —Å–µ–∫."
