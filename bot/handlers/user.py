from aiogram import Bot, Dispatcher
from aiogram.types import Message, CallbackQuery
from bot.keyboards.keyboard import get_main_keyboard, get_city_keyboard
from bot.database.methods.get import get_concerts_by_city
from bot.misc.config import Config
from bot.misc.reformat import get_cities


async def __start(msg: Message) -> None:
    bot: Bot = msg.bot
    await bot.send_message(msg.from_user.id, text=f'–ü—Ä–∏–≤–µ—Ç, {msg.from_user.full_name}\n'
                                                  f'–î–∞–≤–∞–π —É–∑–Ω–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–Ω—Ü–µ—Ä—Ç—ã',
                           reply_markup=get_main_keyboard())


async def __concerts(msg: Message) -> None:
    bot: Bot = msg.bot
    await bot.send_message(msg.from_user.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:', reply_markup=get_city_keyboard())


async def __info(msg: Message):
    bot: Bot = msg.bot
    cities = '\n'.join([f'‚Ä¢ {city}' for city in get_cities().values()])
    await bot.send_message(msg.from_user.id, '<b>tgConcerts</b> - —ç—Ç–æ –æ—Å–æ–±—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–±–∏—Ä–∞–µ—Ç '
                                             '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –∫–æ–Ω—Ü–µ—Ä—Ç–∞—Ö –≥–æ—Ä–æ–¥–æ–≤ –†–æ—Å—Å–∏–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è! '
                                             '–ß—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –Ω–∞–ø–∏—à–∏ <b>/start</b>\n\n'
                                             f'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≥–æ—Ä–æ–¥–∞:\n{cities}')


async def __city_concert(query: CallbackQuery):
    bot: Bot = query.bot
    city_abb = query.data[5:]
    city_name = get_cities()[city_abb]
    concert_list = get_concerts_by_city(city_abb)
    concert_list = '\n'.join([f"{concert.date.strftime('%a, %d %b. %Y')} <i>–æ—Ç {concert.price} ‚ÇΩ</i>\n"
                              f"<b><a href='{concert.url}'>{concert.name}</a></b>\n" for concert in concert_list])
    await bot.send_message(query.from_user.id, f'<a href="https://{city_abb}.{Config.URL}">{city_name.upper()}</a>.'
                                               f' –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤\n\n\n{concert_list}')


async def __site(msg: Message):
    bot: Bot = msg.bot
    await bot.send_message(msg.from_user.id, '<b><a href="https://kassir.ru">Kassir</a></b> - —Å–∞–π—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º '
                                             '–º—ã –∏ —É–∑–Ω–∞–µ–º –≤—Å–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∫–æ–Ω—Ü–µ—Ä—Ç–∞—Ö. –ï—Å–ª–∏ –≤–∞–º –Ω–µ—É–¥–æ–±–µ–Ω –Ω–∞—à –±–æ—Ç, —Ç–æ '
                                             '–≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ —Å–∞–π—Ç–µ ü§î')


def register_user_handlers(dp: Dispatcher) -> None:
    # region message handlers
    dp.register_message_handler(__concerts, content_types=['text'], text='–£–∑–Ω–∞—Ç—å –∫–æ–Ω—Ü–µ—Ä—Ç—ã üî•')
    dp.register_message_handler(__site, content_types=['text'], text='–£–∑–Ω–∞—Ç—å —Å–∞–π—Ç üí¨')
    dp.register_message_handler(__start, commands='start')
    dp.register_message_handler(__info)
    # endregion

    # region callback handlers
    dp.register_callback_query_handler(__city_concert, lambda c: c.data and c.data.startswith('city-'))
    # endregion
